// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        Int       @id @default(autoincrement())
  firstName String?
  lastName  String?
  email     String    @unique
  password  String
  username  String?   @unique
  roles     String[]
  tokens    String[]
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model banner {
  id            Int     @id @default(autoincrement())
  background    String
  bannerUrl     String
  bannerUrlText String
  text          String
  textColor     String
  disable       Boolean
}

model main_section {
  id           Int    @id @default(autoincrement())
  h2           String
  p            String
  buttonText   String
  buttonUrl    String
  h2Color      String
  pColor       String
  mainImageUrl String
}

model popup {
  id           Int     @id @default(autoincrement())
  h2           String
  p            String
  h2Color      String
  pColor       String
  buttonText   String
  buttonColor  String
  buttonLink   String
  mainImageUrl String
  disable      Boolean
}

model knock_main_section {
  id           Int    @id @default(autoincrement())
  h2           String
  tradeMark    String
  p            String
  buttonText   String
  mainImageUrl String
}

model knock_clipper_main_section {
  id           Int    @id @default(autoincrement())
  h2           String
  tradeMark    String
  p            String
  buttonText   String
  mainImageUrl String
}

model main_section_dtk_page {
  id        Int      @id @default(autoincrement())
  tradeMark String
  h2        String[]
  p         String[]
}

// ------------------------- Home Page ------------------------------------------------- 
model home_page {
  id                       Int                        @id @default(autoincrement())
  second_section_home_page second_section_home_page[]
  third_section_home_page  third_section_home_page[]
  forth_section_home_page  forth_section_home_page[]
}

model second_section_home_page {
  id          Int       @id @default(autoincrement())
  h2          String
  tradeMark   String
  p           String
  button      String
  buttonUrl   String
  buttonColor String
  imageUrl    String
  home_page   home_page @relation(fields: [id], references: [id])
}

model third_section_home_page {
  id        Int       @id @default(autoincrement())
  h2        String
  tradeMark String
  p         String
  home_page home_page @relation(fields: [id], references: [id])
}

model forth_section_home_page {
  id            Int       @id @default(autoincrement())
  h2            String[]
  tradeMark     String
  p             String[]
  button        String
  buttonUrl     String
  buttonColor   String
  itemOneHandle String
  itemTwoHandle String
  home_page     home_page @relation(fields: [id], references: [id])
}

// --------------------------------------------------------------------------------------

// --------------------------- Knock Page -----------------------------------------------

model knock_page {
  id                        Int                         @id @default(autoincrement())
  second_section_knock_page second_section_knock_page[]
  third_section_knock_page  third_section_knock_page[]
  forth_section_knock_page  forth_section_knock_page[]
  fifth_section_knock_page  fifth_section_knock_page[]
  six_section_knock_page    six_section_knock_page[]
  seven_section_knock_page  seven_section_knock_page[]
  eight_section_knock_page  eight_section_knock_page[]
  ios_section_knock_page    ios_section_knock_page[]
}

model second_section_knock_page {
  id            Int        @id @default(autoincrement())
  p             String
  knock_page    knock_page @relation(fields: [knock_page_id], references: [id])
  knock_page_id Int
}

model third_section_knock_page {
  id                               Int                                @id @default(autoincrement())
  h2                               String
  tradeMark                        String
  third_section_knock_page_content third_section_knock_page_content[]
  knock_page                       knock_page                         @relation(fields: [knock_page_id], references: [id])
  knock_page_id                    Int
}

model third_section_knock_page_content {
  id                          Int                      @id @default(autoincrement())
  image                       String
  h3                          String
  p                           String
  third_section_knock_page    third_section_knock_page @relation(fields: [third_section_knock_page_id], references: [id])
  third_section_knock_page_id Int
}

model ios_section_knock_page {
  id           Int         @id @default(autoincrement())
  h2           String
  tradeMark    String
  p            String
  button       String
  buttonUrl    String
  buttonColor  String
  imageUrl     String
  knock_page   knock_page? @relation(fields: [knock_pageId], references: [id])
  knock_pageId Int?
}

model forth_section_knock_page {
  id            Int        @id @default(autoincrement())
  h2            String
  p             String
  button        String
  imageUrl      String
  knock_page    knock_page @relation(fields: [knock_page_id], references: [id])
  knock_page_id Int
}

model fifth_section_knock_page {
  id            Int        @id @default(autoincrement())
  h2            String
  tradeMark     String
  p             String
  button        String
  imageUrl      String
  knock_page    knock_page @relation(fields: [knock_page_id], references: [id])
  knock_page_id Int
}

model six_section_knock_page {
  id                             Int                              @id @default(autoincrement())
  six_section_knock_page_content six_section_knock_page_content[]
  knock_page                     knock_page                       @relation(fields: [knock_page_id], references: [id])
  knock_page_id                  Int
}

model six_section_knock_page_content {
  id                        Int                    @id @default(autoincrement())
  imageUrl                  String
  review                    String
  reviewBy                  String
  priority                  Boolean?
  alt                       String?
  six_section_knock_page    six_section_knock_page @relation(fields: [six_section_knock_page_id], references: [id])
  six_section_knock_page_id Int
}

model seven_section_knock_page {
  id                           Int                            @id @default(autoincrement())
  h2                           String
  p                            String
  seven_section_knock_page_pc  seven_section_knock_page_pc[]
  seven_section_knock_page_mac seven_section_knock_page_mac[]
  knock_page                   knock_page                     @relation(fields: [knock_page_id], references: [id])
  knock_page_id                Int
}

model seven_section_knock_page_mac {
  id                          Int                      @id @default(autoincrement())
  li                          String
  seven_section_knock_page    seven_section_knock_page @relation(fields: [seven_section_knock_page_id], references: [id])
  seven_section_knock_page_id Int
}

model seven_section_knock_page_pc {
  id                          Int                      @id @default(autoincrement())
  li                          String
  seven_section_knock_page    seven_section_knock_page @relation(fields: [seven_section_knock_page_id], references: [id])
  seven_section_knock_page_id Int
}

model eight_section_knock_page {
  id               Int        @id @default(autoincrement())
  h2               String
  youtubeUrl       String
  youtubeImageUrl  String
  youtubeUrl2      String
  youtubeImageUrl2 String
  button           String
  knock_page       knock_page @relation(fields: [knock_page_id], references: [id])
  knock_page_id    Int
}

// --------------------------------knock clipper-----------------------------------------

model knock_clipper_page {
  id                                Int                                 @id @default(autoincrement())
  second_section_knock_clipper_page second_section_knock_clipper_page[]
  third_section_knock_clipper_page  third_section_knock_clipper_page[]
  forth_section_knock_clipper_page  forth_section_knock_clipper_page[]
  fifth_section_knock_clipper_page  fifth_section_knock_clipper_page[]
}

model second_section_knock_clipper_page {
  id                    Int                @id @default(autoincrement())
  p                     String
  knock_clipper_page    knock_clipper_page @relation(fields: [knock_clipper_page_id], references: [id])
  knock_clipper_page_id Int
}

model third_section_knock_clipper_page {
  id                    Int                @id @default(autoincrement())
  h2                    String
  p                     String
  button                String
  imageUrl              String
  tradeMark             String
  knock_clipper_page    knock_clipper_page @relation(fields: [knock_clipper_page_id], references: [id])
  knock_clipper_page_id Int
}

model forth_section_knock_clipper_page {
  id                                   Int                                    @id @default(autoincrement())
  h2                                   String
  p                                    String
  forth_section_knock_clipper_page_pc  forth_section_knock_clipper_page_pc[]
  forth_section_knock_clipper_page_mac forth_section_knock_clipper_page_mac[]
  knock_clipper_page                   knock_clipper_page                     @relation(fields: [knock_clipper_page_id], references: [id])
  knock_clipper_page_id                Int
}

model forth_section_knock_clipper_page_mac {
  id                                  Int                              @id @default(autoincrement())
  li                                  String
  forth_section_knock_clipper_page    forth_section_knock_clipper_page @relation(fields: [forth_section_knock_clipper_page_id], references: [id])
  forth_section_knock_clipper_page_id Int
}

model forth_section_knock_clipper_page_pc {
  id                                  Int                              @id @default(autoincrement())
  li                                  String
  forth_section_knock_clipper_page    forth_section_knock_clipper_page @relation(fields: [forth_section_knock_clipper_page_id], references: [id])
  forth_section_knock_clipper_page_id Int
}

model fifth_section_knock_clipper_page {
  id                    Int                @id @default(autoincrement())
  h2                    String
  button                String
  youtubeUrl            String
  youtubeImageUrl       String
  youtubeUrl2           String
  youtubeImageUrl2      String
  knock_clipper_page    knock_clipper_page @relation(fields: [knock_clipper_page_id], references: [id])
  knock_clipper_page_id Int
}

// ------------------------------------------ DTK ---------------------------------------

model dtk_page {
  id                      Int                        @id @default(autoincrement())
  artist_section_dtk_page artist_section_dtk_page[]
  review_section_dtk_page reviews_section_dtk_page[]
  last_section_dtk_page   last_section_dtk_page[]
}

model artist_section_dtk_page {
  id                              Int                               @id @default(autoincrement())
  h2                              String
  tradeMark                       String
  artist_section_dtk_page_content artist_section_dtk_page_content[]
  dtk_page                        dtk_page?                         @relation(fields: [dtk_pageId], references: [id])
  dtk_pageId                      Int?
}

model artist_section_dtk_page_content {
  id                        Int                      @id @default(autoincrement())
  imageUrl                  String
  name                      String
  artist_section_dtk_page   artist_section_dtk_page? @relation(fields: [artist_section_dtk_pageId], references: [id])
  artist_section_dtk_pageId Int?
}

model reviews_section_dtk_page {
  id                              Int                               @id @default(autoincrement())
  review_section_dtk_page_content review_section_dtk_page_content[]
  dtk_page                        dtk_page                          @relation(fields: [dtk_page_id], references: [id])
  dtk_page_id                     Int
}

model review_section_dtk_page_content {
  id                         Int                      @id @default(autoincrement())
  imageUrl                   String
  review                     String
  reviewBy                   String
  priority                   Boolean?
  alt                        String?
  reviews_section_dtk_page   reviews_section_dtk_page @relation(fields: [review_section_dtk_page_id], references: [id])
  review_section_dtk_page_id Int
}

model last_section_dtk_page {
  id         Int       @id @default(autoincrement())
  h2         String
  tradeMark  String
  p          String
  button     String
  buttonUrl  String
  imageUrl   String
  dtk_page   dtk_page? @relation(fields: [dtk_pageId], references: [id])
  dtk_pageId Int?
}

// --------------------------------- FAQ ------------------------------------------------

model faq_page {
  id          Int        @id @default(autoincrement())
  h2          String
  p           String
  h3          String?
  faq_list    faq_list[]
  answer_type String
}

model faq_list {
  id       Int       @id @default(autoincrement())
  li       String
  faq_page faq_page? @relation(fields: [faqId], references: [id])
  faqId    Int?
}

// ------------------------------------ DTK product -------------------------------------

model dtk_product {
  id            Int               @id @default(autoincrement())
  handle        String
  fileCount     Int?
  description   description_dtk[]
  features      features_dtk[]
  filesIncluded files_included[]
  youtubeVideo  youtube_video[]
}

model features_dtk {
  id            Int          @id @default(autoincrement())
  li            String
  dtk_product   dtk_product? @relation(fields: [dtk_productId], references: [id])
  dtk_productId Int?
}

model files_included {
  id            Int          @id @default(autoincrement())
  li            String
  dtk_product   dtk_product? @relation(fields: [dtk_productId], references: [id])
  dtk_productId Int?
}

model youtube_video {
  id            Int          @id @default(autoincrement())
  src           String
  srcImage      String
  title         String?
  dtk_product   dtk_product? @relation(fields: [dtk_productId], references: [id])
  dtk_productId Int?
}

model description_dtk {
  id            Int          @id @default(autoincrement())
  h3            String?
  text          String[]
  dtk_product   dtk_product? @relation(fields: [dtk_productId], references: [id])
  dtk_productId Int?
}

// --------------------------------- Terms of service -----------------------------------

model terms_of_service {
  id Int                  @id @default(autoincrement())
  h3 String
  p  terms_of_service_p[]
}

model terms_of_service_p {
  id                 Int               @id @default(autoincrement())
  text               String
  terms_of_service   terms_of_service? @relation(fields: [terms_of_serviceId], references: [id])
  terms_of_serviceId Int?
}

// ---------------------------------- Shipping Policy ----------------------------------

model shipping_policy {
  id  Int                  @id @default(autoincrement())
  h2  String
  h2s String
  p   String
  p2  String
  ul  shipping_policy_ul[]
}

model shipping_policy_ul {
  id                Int              @id @default(autoincrement())
  li                String
  shipping_policy   shipping_policy? @relation(fields: [shipping_policyId], references: [id])
  shipping_policyId Int?
}

// --------------------------------- Refund Policy ---------------------------------------

model refund_policy {
  id Int    @id @default(autoincrement())
  h2 String
  p  String
}

// ----------------------------------- Privacy Policy -----------------------------------

model privacy_policy {
  id          Int                                   @id @default(autoincrement())
  head        String
  head2       String
  collecting  privacy_policy_collecting[]
  minors      privacy_policy_minors[]
  sharing     privacy_policy_sharing[]
  behavioural privacy_policy_behavioural[]
  personal    privacy_policy_personal_information[]
  lawfulBasis privacy_policy_lawful_basis[]
  retention   privacy_policy_retention[]
  automatic   privacy_policy_automatic[]
  yourRights  privacy_policy_your_rights[]
  ccpa        privacy_policy_ccpa[]
  cookies     privacy_policy_cookies[]
  necessary   privacy_policy_cookies_necessary[]
  analytics   privacy_policy_cookies_analytics[]
  doNotTrack  privacy_policy_do_not_track[]
  changes     privacy_policy_changes[]
  contact     privacy_policy_contact[]
}

model privacy_policy_collecting {
  id               Int                             @id @default(autoincrement())
  h2               String
  p                String
  u                String
  u2               String
  li               privacy_policy_collecting_li[]
  li2              privacy_policy_collecting_li2[]
  privacy_policy   privacy_policy?                 @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_collecting_li {
  id                          Int                        @id @default(autoincrement())
  strong                      String
  text                        String
  privacy_policy_collecting   privacy_policy_collecting? @relation(fields: [privacy_policy_collectingId], references: [id])
  privacy_policy_collectingId Int?
}

model privacy_policy_collecting_li2 {
  id                          Int                        @id @default(autoincrement())
  strong                      String
  text                        String
  privacy_policy_collecting   privacy_policy_collecting? @relation(fields: [privacy_policy_collectingId], references: [id])
  privacy_policy_collectingId Int?
}

model privacy_policy_minors {
  id               Int             @id @default(autoincrement())
  h3               String
  p                String
  privacy_policy   privacy_policy? @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_sharing {
  id               Int                         @id @default(autoincrement())
  h2               String
  p                String
  ul               privacy_policy_sharing_ul[]
  privacy_policy   privacy_policy?             @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_sharing_ul {
  id                       Int                     @id @default(autoincrement())
  li                       String
  a                        String
  privacy_policy_sharing   privacy_policy_sharing? @relation(fields: [privacy_policy_sharingId], references: [id])
  privacy_policy_sharingId Int?
}

model privacy_policy_behavioural {
  id               Int                              @id @default(autoincrement())
  h3               String
  p                privacy_policy_behavioural_p[]
  p2               String
  ul               privacy_policy_behavioural_ul[]
  a                String
  ul2              privacy_policy_behavioural_ul2[]
  privacy_policy   privacy_policy?                  @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_behavioural_ul {
  id                           Int                         @id @default(autoincrement())
  li                           String
  a                            String
  privacy_policy_behavioural   privacy_policy_behavioural? @relation(fields: [privacy_policy_behaviouralId], references: [id])
  privacy_policy_behaviouralId Int?
}

model privacy_policy_behavioural_p {
  id                           Int                         @id @default(autoincrement())
  text                         String
  a                            String
  privacy_policy_behavioural   privacy_policy_behavioural? @relation(fields: [privacy_policy_behaviouralId], references: [id])
  privacy_policy_behaviouralId Int?
}

model privacy_policy_behavioural_ul2 {
  id                           Int                         @id @default(autoincrement())
  li                           String
  em                           String
  privacy_policy_behavioural   privacy_policy_behavioural? @relation(fields: [privacy_policy_behaviouralId], references: [id])
  privacy_policy_behaviouralId Int?
}

model privacy_policy_personal_information {
  id               Int             @id @default(autoincrement())
  h2               String
  p                String
  privacy_policy   privacy_policy? @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_lawful_basis {
  id               Int                              @id @default(autoincrement())
  h3               String
  p                String
  ul               privacy_policy_lawful_basis_ul[]
  privacy_policy   privacy_policy?                  @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_lawful_basis_ul {
  id                            Int                          @id @default(autoincrement())
  li                            String
  privacy_policy_lawful_basis   privacy_policy_lawful_basis? @relation(fields: [privacy_policy_lawful_basisId], references: [id])
  privacy_policy_lawful_basisId Int?
}

model privacy_policy_retention {
  id               Int             @id @default(autoincrement())
  h3               String
  p                String
  privacy_policy   privacy_policy? @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_automatic {
  id               Int                           @id @default(autoincrement())
  h3               String
  p                privacy_policy_automatic_p[]
  ul               privacy_policy_automatic_li[]
  privacy_policy   privacy_policy?               @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_automatic_p {
  id                         Int                       @id @default(autoincrement())
  text                       String
  privacy_policy_automatic   privacy_policy_automatic? @relation(fields: [privacy_policy_automaticId], references: [id])
  privacy_policy_automaticId Int?
}

model privacy_policy_automatic_li {
  id                         Int                       @id @default(autoincrement())
  text                       String
  privacy_policy_automatic   privacy_policy_automatic? @relation(fields: [privacy_policy_automaticId], references: [id])
  privacy_policy_automaticId Int?
}

model privacy_policy_your_rights {
  id               Int                            @id @default(autoincrement())
  h2               String
  h3               String
  p                privacy_policy_your_rights_p[]
  privacy_policy   privacy_policy?                @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_your_rights_p {
  id                           Int                         @id @default(autoincrement())
  text                         String
  em                           String
  a                            String
  privacy_policy_your_rights   privacy_policy_your_rights? @relation(fields: [privacy_policy_your_rightsId], references: [id])
  privacy_policy_your_rightsId Int?
}

model privacy_policy_ccpa {
  id               Int                     @id @default(autoincrement())
  h3               String
  p                privacy_policy_ccpa_p[]
  privacy_policy   privacy_policy?         @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_ccpa_p {
  id                    Int                  @id @default(autoincrement())
  text                  String
  privacy_policy_ccpa   privacy_policy_ccpa? @relation(fields: [privacy_policy_ccpaId], references: [id])
  privacy_policy_ccpaId Int?
}

model privacy_policy_cookies {
  id               Int                        @id @default(autoincrement())
  h2               String
  p                privacy_policy_cookies_p[]
  privacy_policy   privacy_policy?            @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_cookies_p {
  id                       Int                     @id @default(autoincrement())
  text                     String
  privacy_policy_cookies   privacy_policy_cookies? @relation(fields: [privacy_policy_cookiesId], references: [id])
  privacy_policy_cookiesId Int?
}

model privacy_policy_cookies_necessary {
  id               Int                                      @id @default(autoincrement())
  h3               String
  table            privacy_policy_cookies_necessary_table[]
  privacy_policy   privacy_policy?                          @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_cookies_necessary_table {
  id                                 Int                               @id @default(autoincrement())
  strong                             String?
  strong2                            String?
  em                                 String?
  td                                 String?
  privacy_policy_cookies_necessary   privacy_policy_cookies_necessary? @relation(fields: [privacy_policy_cookies_necessaryId], references: [id])
  privacy_policy_cookies_necessaryId Int?
}

model privacy_policy_cookies_analytics {
  id               Int                                      @id @default(autoincrement())
  h3               String
  em               String
  p                privacy_policy_cookies_analytics_p[]
  table            privacy_policy_cookies_analytics_table[]
  privacy_policy   privacy_policy?                          @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_cookies_analytics_table {
  id                                 Int                               @id @default(autoincrement())
  strong                             String?
  strong2                            String?
  em                                 String?
  td                                 String?
  privacy_policy_cookies_analytics   privacy_policy_cookies_analytics? @relation(fields: [privacy_policy_cookies_analyticsId], references: [id])
  privacy_policy_cookies_analyticsId Int?
}

model privacy_policy_cookies_analytics_p {
  id                                 Int                               @id @default(autoincrement())
  p                                  String
  a                                  String
  privacy_policy_cookies_analytics   privacy_policy_cookies_analytics? @relation(fields: [privacy_policy_cookies_analyticsId], references: [id])
  privacy_policy_cookies_analyticsId Int?
}

model privacy_policy_do_not_track {
  id               Int             @id @default(autoincrement())
  h3               String
  p                String
  privacy_policy   privacy_policy? @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_changes {
  id               Int             @id @default(autoincrement())
  h2               String
  p                String
  privacy_policy   privacy_policy? @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_contact {
  id               Int                         @id @default(autoincrement())
  h2               String
  p                privacy_policy_contact_p[]
  em               String
  p2               privacy_policy_contact_p2[]
  privacy_policy   privacy_policy?             @relation(fields: [privacy_policyId], references: [id])
  privacy_policyId Int?
}

model privacy_policy_contact_p {
  id                       Int                     @id @default(autoincrement())
  text                     String
  privacy_policy_contact   privacy_policy_contact? @relation(fields: [privacy_policy_contactId], references: [id])
  privacy_policy_contactId Int?
}

model privacy_policy_contact_p2 {
  id                       Int                     @id @default(autoincrement())
  text                     String
  em                       String
  a                        String
  privacy_policy_contact   privacy_policy_contact? @relation(fields: [privacy_policy_contactId], references: [id])
  privacy_policy_contactId Int?
}

// --------------------------------------------------------------------------------------
model verification_codes {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  expiration DateTime
  code       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
